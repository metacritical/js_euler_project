/*
The prime factors of 13195 are 5, 7, 13 and 29.

What is the largest prime factor of the number 600851475143 ?
*/

var number = 600851475143;
var relist = [];

var prime_num = {
    n : 3,
    is_prime : function(){
        var n2 = parseInt(this.n / 2);
        while ((this.n % n2) !== 0) {
            n2 -= 1;
        };
        if (n2 == 1) {
            return true;
        } else {
            return false;
        }
    },
    next : function(){
        this.n += 2;
        console.log(this.is_prime());
        // while (!(this.is_prime())) {
        //     this.n += 2;
        // }
        return this.n;
    }
};
/*
class Prime_Num(object):
    def __init__(self):
        self.n = 3
        pass

    def is_prime(self):
        n2 = self.n / 2
        while self.n % n2 != 0:
            n2 -= 1
        if n2 == 1:
            return True
        else:
            return False

    def next(self):
        self.n += 2
        while not self.is_prime():
            self.n += 2
        return int(self.n)
*/
function is_prime(n) {
    var n2 = 0;
    if (n == 1) {
        return true;
    }
    n2 = n / 2;
    while (n % n2 != 0) {
        n2 -= 1;
        if (n2 == 1) {
            return true;
        } else {
            return false;
        }
    }
};
/*
def is_prime(n):
    if n == 1:
        return True
    n2 = n / 2
    while n % n2 != 0:
        n2 -= 1
        if n2 == 1:
            return True
        else:
            return False
*/

function find_largest_prime(number) {
    var prime = 0;
    prime = prime_num.next();
    t_number = number;
    console.log("hhh");
    // while (true) {
    //     if (is_prime(t_number)) {
    //         break;
    //     }
    //     prime = prime_num.next();
    //     console.log(prime);
    //     if (t_number % prime == 0) {
    //         relist.append(prime);
    //         t_number = t_number / prime;
    //     }
    }
};
/*

def find_largest_prime(number = 15):
    p = Prime_Num()
    prime = p.next()
    t_number = number
    while True:
        if is_prime(t_number):
            break
        prime = p.next()
        if t_number % prime == 0:
            relist.append(prime)
            t_number = t_number / prime
*/

console.log(parseInt(5 / 2));
find_largest_prime(number);

relist.sort(function(a, b){
    console.log(a);
    return a - b;
});
console.log(relist[-1]);
